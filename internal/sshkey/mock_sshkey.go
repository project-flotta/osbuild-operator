// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/project-flotta/osbuild-operator/internal/sshkey (interfaces: SSHKeyGenerator)

// Package sshkey is a generated GoMock package.
package sshkey

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSSHKeyGenerator is a mock of SSHKeyGenerator interface.
type MockSSHKeyGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockSSHKeyGeneratorMockRecorder
}

// MockSSHKeyGeneratorMockRecorder is the mock recorder for MockSSHKeyGenerator.
type MockSSHKeyGeneratorMockRecorder struct {
	mock *MockSSHKeyGenerator
}

// NewMockSSHKeyGenerator creates a new mock instance.
func NewMockSSHKeyGenerator(ctrl *gomock.Controller) *MockSSHKeyGenerator {
	mock := &MockSSHKeyGenerator{ctrl: ctrl}
	mock.recorder = &MockSSHKeyGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSSHKeyGenerator) EXPECT() *MockSSHKeyGeneratorMockRecorder {
	return m.recorder
}

// GenerateSSHKeyPair mocks base method.
func (m *MockSSHKeyGenerator) GenerateSSHKeyPair() ([]byte, []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateSSHKeyPair")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateSSHKeyPair indicates an expected call of GenerateSSHKeyPair.
func (mr *MockSSHKeyGeneratorMockRecorder) GenerateSSHKeyPair() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateSSHKeyPair", reflect.TypeOf((*MockSSHKeyGenerator)(nil).GenerateSSHKeyPair))
}
